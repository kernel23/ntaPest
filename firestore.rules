rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check user role from their profile
    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    // Helper function to check if the user has one of the specified roles
    function isOneOfRoles(roles) {
      return getUserRole() in roles;
    }

    // Users can manage their own profile. Admins can manage any profile.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isOneOfRoles(['Administrator']);
      allow create: if request.auth.uid == userId;
    }

    // FarmLots can be managed by their owner.
    // Higher-level roles should be able to view them for their duties.
    match /users/{userId}/farmLots/{farmId} {
      allow read: if request.auth.uid == userId || isOneOfRoles(['Extension Worker', 'Branch Coordinator', 'Expert', 'Administrator']);
      allow create, update, delete: if request.auth.uid == userId;
    }

    // Submissions can be created/updated by their owner.
    // Reading is allowed by the owner or higher-level roles.
    match /users/{userId}/farmLots/{farmId}/submissions/{submissionId} {
        allow read, update: if request.auth.uid == userId || isOneOfRoles(['Extension Worker', 'Branch Coordinator', 'Expert', 'Administrator']);
        allow create, delete: if request.auth.uid == userId;
    }

    // This is the crucial rule that enables the Expert's map to work.
    // It allows a collection group query on 'submissions' for authorized roles.
    match /{path=**}/submissions/{submissionId} {
       allow read: if isOneOfRoles(['Expert', 'Administrator', 'Branch Coordinator', 'Extension Worker']);
    }

    // Role requests can be created by any authenticated user.
    // Only Admins can read or update them.
    match /roleRequests/{requestId} {
        allow create: if request.auth.uid != null;
        allow read, update: if isOneOfRoles(['Administrator']);
    }
  }
}
